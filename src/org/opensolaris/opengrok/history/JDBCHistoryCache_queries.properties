#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# See LICENSE.txt included in this distribution for the specific
# language governing permissions and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at LICENSE.txt.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#

createTableRepositories=\
  CREATE TABLE REPOSITORIES (\
    ID INT GENERATED ALWAYS AS IDENTITY \
        CONSTRAINT REPOSITORIES_PK PRIMARY KEY, \
    PATH VARCHAR(32672) \
        CONSTRAINT REPOSITORIES_PATH_UNIQUE UNIQUE NOT NULL)

createTableFiles=\
  CREATE TABLE FILES (\
    ID INT GENERATED ALWAYS AS IDENTITY \
        CONSTRAINT FILES_PK PRIMARY KEY, \
    PATH VARCHAR(32672) NOT NULL, \
    REPOSITORY INT NOT NULL \
        CONSTRAINT FILES_FK_REPO REFERENCES REPOSITORIES ON DELETE CASCADE, \
    CONSTRAINT FILES_REPO_PATH_UNIQUE UNIQUE (REPOSITORY, PATH))

createTableAuthors=\
  CREATE TABLE AUTHORS (\
    ID INT GENERATED ALWAYS AS IDENTITY \
        CONSTRAINT AUTHORS_PK PRIMARY KEY, \
    REPOSITORY INT NOT NULL \
        CONSTRAINT AUTHORS_FK_REPO REFERENCES REPOSITORIES ON DELETE CASCADE, \
    NAME VARCHAR(32672) NOT NULL, \
    CONSTRAINT AUTHORS_REPO_NAME_UNIQUE UNIQUE (REPOSITORY, NAME))

createTableChangesets=\
  CREATE TABLE CHANGESETS (\
    ID INT GENERATED ALWAYS AS IDENTITY \
        CONSTRAINT CHANGESETS_PK PRIMARY KEY, \
    REPOSITORY INT NOT NULL \
        CONSTRAINT CHANGESETS_FK_REPO \
            REFERENCES REPOSITORIES ON DELETE CASCADE, \
    REVISION VARCHAR(1024) NOT NULL, \
    AUTHOR INT NOT NULL \
        CONSTRAINT CHANGESETS_FK_AUTH REFERENCES AUTHORS ON DELETE CASCADE, \
    TIME TIMESTAMP NOT NULL, \
    MESSAGE VARCHAR(32672) NOT NULL, \
    CONSTRAINT CHANGESETS_REPO_REV_UNIQUE UNIQUE (REPOSITORY, REVISION))

createIndexChangesetsRepoIdDesc=\
  CREATE UNIQUE INDEX IDX_CHANGESETS_REPO_ID_DESC ON \
    CHANGESETS(REPOSITORY, ID DESC)

createTableFilechanges=\
  CREATE TABLE FILECHANGES (\
    ID INT GENERATED ALWAYS AS IDENTITY \
        CONSTRAINT FILECHANGES_PK PRIMARY KEY, \
    FILE INT NOT NULL \
        CONSTRAINT FILECHANGES_FK_FILE REFERENCES FILES ON DELETE CASCADE, \
    CHANGESET INT NOT NULL \
        CONSTRAINT FILECHANGES_FK_CS REFERENCES CHANGESETS ON DELETE CASCADE, \
    CONSTRAINT FILECHANGES_FILE_CS_UNIQUE UNIQUE (FILE, CHANGESET))

hasCacheForDirectory=\
  SELECT 1 FROM REPOSITORIES R \
  WHERE R.PATH = ? AND EXISTS \
      (SELECT 1 FROM FILES F \
         WHERE F.REPOSITORY = R.ID AND F.PATH LIKE ? ESCAPE '#')

getFileHistory=\
  SELECT CS.REVISION, A.NAME, CS.TIME, CS.MESSAGE, CS.ID \
  FROM \
      CHANGESETS CS, FILECHANGES FC, REPOSITORIES R, FILES F, AUTHORS A \
  WHERE \
      R.PATH = ? AND F.PATH = ? AND F.REPOSITORY = R.ID AND \
      CS.ID = FC.CHANGESET \
      AND FC.FILE = F.ID AND A.ID = CS.AUTHOR  \
  ORDER BY CS.ID DESC

getDirHistory=\
  SELECT DISTINCT CS.REVISION, A.NAME, CS.TIME, CS.MESSAGE, CS.ID \
  FROM \
      CHANGESETS CS, FILECHANGES FC, REPOSITORIES R, FILES F, AUTHORS A \
  WHERE \
      R.PATH = ? AND F.PATH LIKE ? ESCAPE '#' AND F.REPOSITORY = R.ID AND \
      CS.ID = FC.CHANGESET \
      AND FC.FILE = F.ID AND A.ID = CS.AUTHOR  \
  ORDER BY CS.ID DESC

getFilesInChangeset=\
  SELECT F.PATH FROM FILES F, FILECHANGES FC \
  WHERE F.ID = FC.FILE AND FC.CHANGESET = ?

getRepository=SELECT ID FROM REPOSITORIES WHERE PATH = ?

addRepository=INSERT INTO REPOSITORIES(PATH) VALUES ?

addChangeset=\
  INSERT INTO CHANGESETS (REPOSITORY, REVISION, AUTHOR, TIME, MESSAGE) \
  VALUES (?,?,?,?,?)

addFilechange=INSERT INTO FILECHANGES(CHANGESET, FILE) VALUES (?,?)

getAuthors=SELECT NAME, ID FROM AUTHORS WHERE REPOSITORY = ?

addAuthor=INSERT INTO AUTHORS (REPOSITORY, NAME) VALUES (?,?)

getFiles=SELECT PATH, ID FROM FILES WHERE REPOSITORY = ?

addFile=INSERT INTO FILES(REPOSITORY, PATH) VALUES (?,?)

getLatestCachedRevision=\
  SELECT REVISION FROM CHANGESETS WHERE ID = \
    (SELECT MAX(CS.ID) FROM CHANGESETS CS, REPOSITORIES R \
            WHERE CS.REPOSITORY = R.ID AND R.PATH = ?)
